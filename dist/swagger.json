{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Ability Bank API",
        "license": {
            "name": "MIT"
        }
    },
    "host": "http://localhost:8080",
    "basePath": "/v1",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "auth/login": {
            "post": {
                "description": "Logs user into the system",
                "summary": "Login",
                "tags": [
                    "authentication"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The samples on the right show you every attribute that could be used.",
                        "required": true,
                        "schema" : {
                            "type": "object",
                            "required": [
                                "email",
                                "password"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "jhon.doe@mail.com",
                                    "description": "The user's email"
                                },
                                "password": {
                                    "type": "string",
                                    "minLength": 6,
                                    "example": "password",
                                    "description": "The user's password"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user was created. See Response Class below for schema.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "accessToken"
                            ],
                            "properties": {
                                "user": {
                                    "$ref": "#/definitions/users_response"
                                },
                                "accessToken": {
                                    "type": "string",
                                    "description": "Unique user token used for identification",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body. The message will vary depending on the cause."
                    },
                    "409": {
                        "description": "Invalid or missing api token"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "This endpoint can be used to retrieve a list of users. ",
                "summary": "List users",
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "The users were retrieved. See Response Class below for schema.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/users_response"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body. The message will vary depending on the cause."
                    },
                    "401": {
                        "description": "Invalid token."
                    }
                }
            },
            "post": {
                "description": "Creates a new user according to the JSON object received in body.",
                "summary": "Create a user",
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The samples on the right show you every attribute that could be used.",
                        "required": true,
                        "schema" : {
                           "$ref": "#/definitions/post_users_body"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The user was created. See Response Class below for schema.",
                        "schema": {
                            "$ref": "#/definitions/users_response"
                        }
                    },
                    "400": {
                        "description": "Invalid request body. The message will vary depending on the cause."
                    },
                    "409": {
                        "description": "The email or username has already been used for another user"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "description": "This endpoint can be used to retrieve user details given the user's id.",
                "summary": "Get a user",
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The _id of the user to retrieve",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The users were retrieved. See Response Class below for schema.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/users_response"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body. The message will vary depending on the cause."
                    },
                    "401": {
                        "description": "Invalid token."
                    },
                    "404": {
                        "description": "The user does not exist."
                    }
                }
            },
            "patch": {
                "description": "Updates a user with the object's properties received in the request's body (the object should be a JSON object).",
                "summary": "Update a user",
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The _id of the user to retrieve",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The samples on the right show you every attribute that could be used.",
                        "required": true,
                        "schema" : {
                            "$ref": "#/definitions/patch_users_by_id_body"
                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "The user was updated. See Response Class below for schema.",
                        "schema": {
                            "$ref": "#/definitions/users_response"
                        }
                    },
                    "400": {
                        "description": "Invalid request body. The message will vary depending on the cause."
                    },
                    "409": {
                        "description": "Invalid or missing api token"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/activation": {
            "patch": {
                "description": "This endpoint can be used to activation a single user based on the id.",
                "summary": "Activation a user",
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The _id of the user to retrieve",
                        "type": "string"
                    },
                    {
                        "name": "User status",
                        "in": "body",
                        "description": "The users status can be activate and deactivate",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "userStatus":{
                                    "$ref": "#/definitions/UserStatus"
                                }
                            }

                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "The user was updated. See Response Class below for schema.",
                        "schema": {
                            "$ref": "#/definitions/users_response"
                        }
                    },
                    "400": {
                        "description": "Invalid request body. The message will vary depending on the cause."
                    },
                    "409": {
                        "description": "Invalid or missing api token"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "post_users_body": {
            "type": "object",
            "required": [
                "email",
                "password",
                "firstName",
                "lastName",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jhon.doe@mail.com",
                    "description": "The user's email"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password",
                    "description": "The user's password"
                },
                "firstName": {
                    "type": "string",
                    "example": "john",
                    "description": "The user's firstname"
                },
                "lastName": {
                    "type": "string",
                    "example": "doe",
                    "description": "The user's lastname"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe",
                    "description": "The user's username"
                }
            }
        },
        "patch_users_by_id_body": {
            "type": "object",
            "required": [
                "firstName",
                "lastName"
            ],
            "properties": {
                "firstName": {
                    "type": "string",
                    "example": "john",
                    "description": "The user's firstname"
                },
                "lastName": {
                    "type": "string",
                    "example": "doe",
                    "description": "The user's lastname"
                }
            }
        },
        "users_response": {
            "type": "object",
            "required": [
                "_id",
                "email",
                "firstName",
                "lastName",
                "username"
            ],
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "5457edea1b8f22891a000004",
                    "description": "The user's unique identifier"
                },
                "email": {
                    "type": "string",
                    "example": "jhon.doe@mail.com",
                    "description": "The user's email"
                },
                "firstName": {
                    "type": "string",
                    "example": "john",
                    "description": "The user's firstname"
                },
                "lastName": {
                    "type": "string",
                    "example": "doe",
                    "description": "The user's lastname"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe",
                    "description": "The user's username"
                },
                "userStatus": {
                    "$ref": "#/definitions/UserStatus"
                },
                "apps" : {
                    "type" : "array",
                    "items" : {
                        "$ref" : "#/definitions/apps",
                        "description": "The list of apps that the user is admin"
                    }
                },
                "groups" : {
                    "type" : "array",
                    "items" : {
                        "$ref" : "#/definitions/groups",
                        "description": "The list of groups that the user has joined to"
                    }
                }
            }
        },
        "UserStatus": {
            "type" : "string",
            "example": "activate",
            "description" : "User Status",
            "enum": [
                "activete",
                "deactivete"
            ]
        },
        "apps": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "TE2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ....",
                    "description": "The app's unique identifier"
                }
            }
        },
        "groups": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "FtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9....",
                    "description": "The group's unique identifier"
                }
            }
        },
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}